<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>牛客寒假笔记1</title>
      <link href="/2025/01/11/%E7%AC%94%E8%AE%B0/%E7%89%9B%E5%AE%A2%E5%AF%92%E5%81%87%E7%AC%94%E8%AE%B01/"/>
      <url>/2025/01/11/%E7%AC%94%E8%AE%B0/%E7%89%9B%E5%AE%A2%E5%AF%92%E5%81%87%E7%AC%94%E8%AE%B01/</url>
      
        <content type="html"><![CDATA[<h2 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h2><p>长时间没有训练加学习，完全生疏，从头开始过一遍入门班</p><h2 id="学习要求"><a href="#学习要求" class="headerlink" title="学习要求"></a>学习要求</h2><h3 id="1-学会写题解"><a href="#1-学会写题解" class="headerlink" title="1.学会写题解"></a>1.学会写题解</h3><p>题解的要求？  </p><ul><li>英文题面，概括题目意思</li><li>题目的主要思路和易错点</li><li>为什么没有写对，回忆一下到底是哪里写错了</li></ul><p>写点小故事也未尝不可<br>不要求长，要求能看懂</p><h3 id="2-不建议找别人来调自己的代码，锻练不了自己的调试能力"><a href="#2-不建议找别人来调自己的代码，锻练不了自己的调试能力" class="headerlink" title="2.不建议找别人来调自己的代码，锻练不了自己的调试能力"></a>2.不建议找别人来调自己的代码，锻练不了自己的调试能力</h3><p><em><strong>请独立完成编码</strong></em> 不要左边有一个代码，右边对着敲，没有任何用，把窗口关掉，自己独立的写出来，题目是刷不完的，不要拿题量感动自己<br>如果看过别人的代码，请<strong>隔一段时间</strong>再去写，不然细节会想不明白的  </p><h3 id="3-知其然也要知其所以然，请搞懂为什么这么写"><a href="#3-知其然也要知其所以然，请搞懂为什么这么写" class="headerlink" title="3.知其然也要知其所以然，请搞懂为什么这么写"></a>3.知其然也要知其所以然，请搞懂为什么这么写</h3><p>不能只记忆模板，多问为什么<br>自己归纳、发散。<br>别人告诉你的和你自己理解出来的是不一样的</p><h3 id="4-记得复习"><a href="#4-记得复习" class="headerlink" title="4.记得复习"></a>4.记得复习</h3><p>写题解是为了自己复习的。不要追求别人看的怎么怎么样。</p><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p>取模运算实际上时间复杂度不如↓</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(a&lt;b)a-=b;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 牛客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20250110训练题解</title>
      <link href="/2025/01/10/%E9%A2%98%E8%A7%A3/20250110%E8%AE%AD%E7%BB%83%E9%A2%98%E8%A7%A3/"/>
      <url>/2025/01/10/%E9%A2%98%E8%A7%A3/20250110%E8%AE%AD%E7%BB%83%E9%A2%98%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p>今天是正式<strong>打算</strong>开始复健的第一天</p><h2 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h2><p><a href="https://atcoder.jp/contests/abc387/tasks/abc387_a">abc387-A - Happy New Year 2025</a></p><h3 id="题面"><a href="#题面" class="headerlink" title="题面"></a>题面</h3><p>给定两个正整数 $A$ 和 $B$。</p><p>输出 $A + B$ 的平方。</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>秒了</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a,b;</span><br><span class="line">cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">cout&lt;&lt;(a+b)*(a+b);</span><br></pre></td></tr></table></figure><h2 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h2><p><a href="https://atcoder.jp/contests/abc387/tasks/abc387_b">abc387-B - 9x9 Sum</a></p><h3 id="题面-1"><a href="#题面-1" class="headerlink" title="题面"></a>题面</h3><blockquote><p>在 $9 \times 9$ 的乘法表中，共有 $81$ 个整数。</p></blockquote><p>给定一个整数 $X$，求在这个乘法表中所有不等于 $X$ 的整数的和。如果同一个数出现在多个单元格中，则要多次计入该数。</p><p>有一个$9 \times 9$ 乘法表<br>给一个数字$X$，问排除这个数字后 剩下数字的和</p><h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>只需要遍历，然后如果等于这个数字，那么用总数减去即可，即可不用得知一共出现几次也能去除</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="type">int</span> flag=<span class="number">2025</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">9</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">9</span>;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i*j==n)flag-=n;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;flag;</span><br></pre></td></tr></table></figure><h2 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h2><p><a href="https://codeforces.com/problemset/problem/2051/D">cf-2051D-Counting Pairs</a></p><h3 id="题面-2"><a href="#题面-2" class="headerlink" title="题面"></a>题面</h3><p>给定一个由 $n$ 个整数构成的序列 $a$，其中第 $i$ 个元素为 $a_i$。同时给定两个整数 $x$ 和 $y$ （$x \le y$）。</p><p>一对整数 $(i, j)$ 被认为是有趣的，如果满足以下条件：</p><ul><li>$1 \le i &lt; j \le n$；</li><li>如果你同时从序列 $a$ 中删除位置 $i$ 和 $j$ 上的元素，剩余元素的和大于等于 $x$ 且小于等于 $y$。</li></ul><p>你的任务是计算出符合条件的有趣整数对 $(i, j)$ 的数量。</p><h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>比较<strong>重要</strong>的一点是，要发现即使对序列进行排序，也不会改变有趣整数对也就是答案的数量。<br>假设有 3 5 2 1 4，排序后变为 1 2 3 4 5<br>假设原来有 3 2 满足条件，排序后变为 2 3。此时只需要在逻辑上改变 $i$ 和 $j$ 的先后顺序即可，其他任何事没有发生变化，减去的依然是这两个数。因此排序后依然成立。</p><p>接下来要完成对一个有序序列的数对的计算，可以使用二分或者双指针</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">ll n,x,y,sum;</span><br><span class="line"><span class="function">ll <span class="title">f</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp;a,ll num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//这个函数的功能是找到，有多少仅小于目标数字的数对</span></span><br><span class="line">ll j=<span class="number">0</span>,ans1=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(j&lt;n&amp;&amp;sum-a[i]-a[j]&gt;=num)<span class="comment">//如果大于num那么不可以，j往后</span></span><br><span class="line">&#123;</span><br><span class="line">j++;</span><br><span class="line">&#125;</span><br><span class="line">ans1+=(n-j);<span class="comment">//如果j更大了，那么减去后只会更小</span></span><br><span class="line"><span class="comment">//所以一直到结尾都可以 n-j 实际上是 (n-1)-j+1</span></span><br><span class="line"><span class="comment">//然后变为n-j</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(sum-a[i]-a[i]&lt;num)<span class="comment">//去除i和j相等的情况</span></span><br><span class="line">    ans1--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans1/<span class="number">2</span>;<span class="comment">//i和j可以交换位置也成立，所以要去除一半</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;x&gt;&gt;y;</span><br><span class="line">sum=<span class="number">0</span>;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt;<span class="built_in">a</span>(n);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i =<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">    cin&gt;&gt;a[i];sum+=a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(a.<span class="built_in">begin</span>(),a.<span class="built_in">end</span>());</span><br><span class="line">cout&lt;&lt;<span class="built_in">f</span>(a,y<span class="number">+1</span>)-<span class="built_in">f</span>(a,x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 双指针 </tag>
            
            <tag> 加密 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从学术研究到量化交易</title>
      <link href="/2024/10/06/%E7%AC%94%E8%AE%B0/%E4%BB%8E%E5%AD%A6%E6%9C%AF%E7%A0%94%E7%A9%B6%E5%88%B0%E9%87%8F%E5%8C%96%E4%BA%A4%E6%98%93%E7%AC%94%E8%AE%B0/"/>
      <url>/2024/10/06/%E7%AC%94%E8%AE%B0/%E4%BB%8E%E5%AD%A6%E6%9C%AF%E7%A0%94%E7%A9%B6%E5%88%B0%E9%87%8F%E5%8C%96%E4%BA%A4%E6%98%93%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>一般的研究流程<br>找到一个深入了解也感兴趣的方向<br>阅读大量文献<br>从文献发现可以改进的地方<br>做实验、做改进、整理成论文<br>论文发表</p><p>了解一个领域：<br>1.从综述或者比较新的经典文章开始了解<br>2.再从综述或经典文章的引用文献开始了解<br>3.阅读顺序：摘要大于介绍 关注作者的理解、缺陷、改进点<br>4.不要用自动翻译</p><p>杂谈：关注对应领域牛人的推特&#x2F;知乎<br>关注近期会议接受情况，了解较好文章的分布，尝试找出共同方向<br>不要看非专业的资讯源。对于以学术研究为方向，不要过度关注工业应用</p><p>做细致的研究<br>一般提出某个优化后：<br>比较在不同数据集、不同范围、不同参数下，模型是否有统一的优势<br>思考优势是如何产生的？是否有理论支持？是否有潜在的劣势？<br>研究启示和如何进一步改进<br>追求客观、严谨和准确，文字图表简明清晰</p><p>做最好的研究<br>趋势：质量大于数量，文章宁缺毋滥，不要发水刊 ccf-c及以下<br>ccf分类是主要标准<br>永远保持学术品位和学术道德<br>好文章一般在目录的A类的非国内期刊&#x2F;会议。目录存在缺失和分类，例如iclr<br>没有想法可以从kaggle做起</p><p>兴趣经常是假的，深入了解后可能会不喜欢了<br>对齐自己的认知和前沿的认知，了解该方向不完善的地方<br>广交在领域内有较好产出的朋友，结合不同方向的人的看法</p><p>不要陷入热点<br>热点切换的很快<br>热点的机会的窗口期很短，从发现到发表只有3-6个月<br>个人的研究会失去连续性，容易迷失方向</p><p>人多的方向也别选，特别是大模型、视觉、自然语言<br>大方向都有工程化的趋势</p><p>如果要以科研为职业<br>特点：赢家通吃，成就感强<br>申请phd主要评估：文章质量、关系（从属实验室）、文章数量<br>国内学术界科研：产出、山头、帽子<br>国外：性别、产出、关系</p><p>一作、高质量、推荐信</p><p>逐渐互联网化<br>好处：有钱有闲，不容易被开</p><p>坏处：坑很多，很多职位都叫quant，但是大部分是牛马<br>门槛很高：行业不需要太多人</p><p>本质你要拿出证据说明你能给研究组干活</p><p>本科生想做学术要进组<br>也可以从好的学术社区做起，微软科技，cvpr<br>访问学生的要求平均是发一篇A</p><p>访问学生：<br>不需要看计划，直接发邮件，说明有多少能力，能打多少杂，海投</p><p>openreview.net</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 量化 </tag>
            
            <tag> 学术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于人类精神世界的思考</title>
      <link href="/2024/06/23/%E6%80%9D%E8%80%83/%E5%85%B3%E4%BA%8E%E4%BA%BA%E7%B1%BB%E7%B2%BE%E7%A5%9E%E4%B8%96%E7%95%8C%E7%9A%84%E6%80%9D%E8%80%83/"/>
      <url>/2024/06/23/%E6%80%9D%E8%80%83/%E5%85%B3%E4%BA%8E%E4%BA%BA%E7%B1%BB%E7%B2%BE%E7%A5%9E%E4%B8%96%E7%95%8C%E7%9A%84%E6%80%9D%E8%80%83/</url>
      
        <content type="html"><![CDATA[<p> 在实践费曼学习法的过程中，我逐步认识到，每个人的思考方式大抵是非常不同的，同时每个人也很难理解他人的思考方式（有待商榷）。</p><pre><code>过程如下：某天在脑子中，我像往常一样用“图形化思考”的方式思考问题，就是在脑中想象整个过程的结构、细节，仿佛一种流程图，并尝试用语言将这一幅图描绘出来，让聆听者的脑中也出现这样一个图景。但我突然意识到，聆听者或许也能“看到”那幅图，但可能不再是原样了，或许是“外貌”不同、又或者内容也稍有差异，这取决于聆听者过往是怎样处理这类图景的。例如，我脑中的是高一学习编程时留下的传统流程图，再加上思维导图。而在他人脑中就算是二分图，我觉得也不是什么怪事，这是个性化的，如果没有具象化的例子，那么就各有各的特色。因此，如果让人的思想任由自己发散，那么大概率，从地基到穹顶，从玻璃幕墙到砖瓦林立，千奇百怪。这也很好解释为什么人与人很难相互理解，你的思想是栋楼，我的思想是湖泊，碰撞在一起，要么被淹没，要么水溢出。当然上面的例子有些绝对，在社会这个大框架下，一般是不会出现完全相悖的价值观、思考方式的。</code></pre><p>嗯，随便写写，就到这了，感谢你能看到这里。</p>]]></content>
      
      
      <categories>
          
          <category> 思考 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
